import app.weather.buildsrc.Libs
import app.weather.buildsrc.Versions

buildscript {
    ext.buildConfig = [
            'compileSdk': 30,
            'minSdk'    : 23,
            'targetSdk' : 30,
    ]

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath Libs.androidGradlePlugin

        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.Kotlin.extensions

        classpath Libs.Hilt.gradlePlugin
    }
}

plugins {
    id 'com.diffplug.spotless' version '5.7.0'
    id 'com.github.ben-manes.versions' version '0.33.0'
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()

        // Used for Accompanist snapshots
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
}

subprojects {
    configurations.configureEach {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def group = details.requested.group
            def module = details.requested.module.name

            if (group == 'org.jetbrains.kotlin' && module == 'kotlin-stdlib-jre7') {
                // kotlin-stdlib-jre7 no longer exists in 1.4, so we force the
                // kotlin-stdlib module instead
                details.useTarget Libs.Kotlin.stdlib
            }

            if ((group.startsWith('androidx.ui') || group.startsWith('androidx.compose'))
                    && Libs.AndroidX.Compose.version.endsWith('SNAPSHOT')) {
                // If we're using a SNAPSHOT version of Compose, we need to  force all
                // the SNAPSHOT version. We may be using other dependencies which rely
                // on stable version of Compose (such as a MDC Theme Adapter), which will
                // pin the version back.
                // This may not always work if there's binary changes in the snapshot.
                details.useVersion Libs.AndroidX.Compose.version
            }

            // The Compose Compiler Maven group/module names changed in alpha04, but AGP
            // hasn't yet been updated. We workaround that by forcing the new group/module names.
            // TODO remove this once AGP has been updated
            if (group == 'androidx.compose' && module == 'compose-compiler') {
                details.useTarget(Libs.AndroidX.Compose.compiler)
            }
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint)
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"

            freeCompilerArgs += "-Xallow-jvm-ir-dependencies"

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}
